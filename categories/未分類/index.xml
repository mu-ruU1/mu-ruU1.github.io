<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>未分類 on Yuuのブログ</title><link>https://takag.me/categories/%E6%9C%AA%E5%88%86%E9%A1%9E/</link><description>Recent content in 未分類 on Yuuのブログ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Mon, 30 Jan 2023 22:35:09 +0900</lastBuildDate><atom:link href="https://takag.me/categories/%E6%9C%AA%E5%88%86%E9%A1%9E/index.xml" rel="self" type="application/rss+xml"/><item><title>ノートPCにUbuntuをインストールしてみた</title><link>https://takag.me/p/2023-01-30/</link><pubDate>Mon, 30 Jan 2023 22:35:09 +0900</pubDate><guid>https://takag.me/p/2023-01-30/</guid><description>&lt;img src="https://takag.me/img/2023/01-30/desktop.png" alt="Featured image of post ノートPCにUbuntuをインストールしてみた" />&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>インストール時の注意と自分がやった設定等を書き残しておきます。&lt;/p>
&lt;h2 id="インストール">インストール&lt;/h2>
&lt;p>Asus Expertbook は電源ボタンを押した直後に&lt;code>F2&lt;/code>キーを長押しすることで BIOS に入ることができます。&lt;br>
Ubuntu のインストールメディアからブートするとインストーラーが起動します。&lt;br>
しかし&lt;code>Turn off RST&lt;/code>の警告が出てインストールを中断させられました。&lt;br>
&lt;a class="link" href="https://help.ubuntu.com/rst/" target="_blank" rel="noopener"
>Ubuntu 公式ドキュメント&lt;/a>ではレジストリエディタを使った Intel RST 構成を変更する方法が紹介されていますが、面倒だったので BIOS から Intel RST を無効にしました。&lt;/p>
&lt;ol>
&lt;li>Advanced Mode で SATA 設定に入り
&lt;img src="https://takag.me/img/2023/01-30/bios_01.jpg"
loading="lazy"
>&lt;/li>
&lt;li>SATA モードを AHCI に変更する
&lt;img src="https://takag.me/img/2023/01-30/bios_02.jpg"
loading="lazy"
>&lt;/li>
&lt;/ol>
&lt;p>これで Ubuntu をインストールすることができます。&lt;/p>
&lt;h2 id="バッテリー充電制御">バッテリー充電制御&lt;/h2>
&lt;p>バッテリーの劣化を防ぐために設定します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo apt install -y powertop tlp tlp-rdw
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo powertop --auto-tune
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo tlp start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>設定ファイル&lt;code>/etc/tlp.conf&lt;/code>の修正&lt;br>
数値はお好みで&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="cl">START_CHARGE_THRESH_BAT0=75
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">STOP_CHARGE_THRESH_BAT0=80
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="シリアルを使用できるようにする">シリアルを使用できるようにする&lt;/h2>
&lt;p>ルーターの設定でシリアル接続を利用するために行いました。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ll /dev/ttyUSB0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">crw-rw---- &lt;span class="m">1&lt;/span> root dialout &lt;span class="m">188&lt;/span> /dev/ttyUSB0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ユーザーを dialout グループに追加する&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo gpasswd -a &lt;span class="nv">$USER&lt;/span> dialout
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再ログインすることで有効になります。&lt;/p></description></item><item><title>Hello World</title><link>https://takag.me/p/2022-12-21/</link><pubDate>Wed, 21 Dec 2022 19:16:28 +0900</pubDate><guid>https://takag.me/p/2022-12-21/</guid><description>&lt;img src="https://takag.me/img/2022/12-21/hugo-logo.jpeg" alt="Featured image of post Hello World" />&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>ブログを開設しました。やる気があるときに書いていきます。&lt;br>
初投稿はこのブログの技術的なことについて書き残しておこうと思います。&lt;/p>
&lt;h2 id="技術スタック">技術スタック&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/golang/go" target="_blank" rel="noopener"
>Golang&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/gohugoio/hugo" target="_blank" rel="noopener"
>Hugo&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener"
>Hugo Theme Stack&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://hub.docker.com/r/klakegg/hugo" target="_blank" rel="noopener"
>Docker&lt;/a>&lt;/li>
&lt;li>VScode Remote Containers&lt;/li>
&lt;li>GitHub Pages&lt;/li>
&lt;li>GitHub Actions&lt;/li>
&lt;/ul>
&lt;h2 id="hugo-について">Hugo について&lt;/h2>
&lt;p>Go で記述された静的サイトジェネレーター&lt;br>
マークダウン形式で記事が書けるのでとても簡単&lt;/p>
&lt;h2 id="記事投稿の流れ">記事投稿の流れ&lt;/h2>
&lt;ol>
&lt;li>記事を生成&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ hugo new post/sample.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>記事を書く&lt;br>
ファイルパスは&lt;code>&amp;lt;site-name&amp;gt;/content/post&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>
&lt;p>GitHub に push&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Github Action Workflow によりデプロイ完了！&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>Go の勉強がてらに良さげなフレームワークを探してこれにたどり着きました。&lt;br>
結局 Go の勉強にはなりませんでしたが&amp;hellip;&lt;/p>
&lt;p>それはさておき、記事を量産できるよう頑張ります。&lt;/p>
&lt;hr>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack/issues/71" target="_blank" rel="noopener"
>Categoris color different on posts and changes when opening a post&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>