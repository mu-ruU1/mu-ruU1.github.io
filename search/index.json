[{"content":"はじめに 外出中に自宅のネットワークにアクセスしたいことがある。\nそういった場合に VPN を利用することでローカルネットワークへのリモートアクセスが可能になる。\nそこで今回は SoftEther VPN を使用した。\n手順 Proxmox VE Proxmox VEで VM の作成で気をつけることが 1 つある。\nデフォルトのネットワークデバイスのモデルはVirtIO (準仮想化)だと思うが、Intel E1000に変更するする必要がある。\nこれをしないと、上り下りのスループットが 3Mbps 程しか出ない。\nSoftEther VPN ダウンロード PPA を使用してインストールもできるが、バージョンが古いのでダウンロードサイトから手動で入れる。\n$ sudo apt install gcc make -y $ curl -O \u0026lt;ファイルのURL\u0026gt; $ tar xzvf \u0026lt;ファイル\u0026gt; $ cd vpnserver $ make $ cd .. $ sudo mv vpnserver /usr/local/softether $ cd /usr/local/softether/vpnserver $ chmod 600 * $ chmod 700 vpncmd vpnserver Systemd コレを参考に/etc/systemd/system/softether-vpnserver.serviceを作成する。\n[Unit] Description=SoftEther VPN Server After=network.target auditd.service ConditionPathExists=!/usr/local/softether/vpnserver/do_not_run [Service] Type=forking TasksMax=infinity EnvironmentFile=-/usr/local/softether/vpnserver ExecStart=/usr/local/softether/vpnserver/vpnserver start ExecStop=/usr/local/softether/vpnserver/vpnserver stop KillMode=process Restart=on-failure # Hardening PrivateTmp=yes ProtectHome=yes ProtectSystem=full ReadOnlyDirectories=/ ReadWriteDirectories=-/usr/local/softether/vpnserver CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE CAP_NET_BROADCAST CAP_NET_RAW CAP_SYS_NICE CAP_SYSLOG CAP_SETUID [Install] WantedBy=multi-user.target その後\n$ sudo systemctl daemon-reload $ sudo systemctl start softether-vpnserver.service $ sudo systemctl enable softether-vpnserver.service $ sudo systemctl status softether-vpnserver.service あとはサーバー管理ツール等で VPN の設定をすれば完了です。\n参考 SoftEther speed is too slow ","date":"2022-12-30T16:04:42+09:00","image":"https://takag.me/img/2022/12-30/selogo.jpg","permalink":"https://takag.me/p/2022-12-30/","title":"SoftEther VPNをProxmoxで構築する"},{"content":"はじめに ネットワークの勉強のために 7 月頃に Cisco891F を買ったけれども、色々忙しくて全く触れていませんでした。 冬休みになって時間ができたのでこれから勉強していきたいと思います。\n事の発端 手始めに Cisco891F x 3 を使ってSVI を利用した VLAN 間ルーティングを試していたところ特定の条件で ping が通らないことが起こりました。\n具体的には、同一 VLAN では ping が通るが異なる VLAN 間では ping が通らないといった状態です。\n内容 VLAN10(172.16.10.0/24)に所属している PC から VLAN20(172.16.20.0/24)に所属している PC に ping を実行したときの結果が以下のようになりました。\nPS C:\\Users\\user\u0026gt; ping 172.16.20.1 172.16.20.1 に ping を送信しています 32 バイトのデータ: 要求がタイムアウトしました。 要求がタイムアウトしました。 要求がタイムアウトしました。 tracert を実行したときの結果も載せておきます。\nPS C:\\Users\\user\u0026gt; tracert 172.16.20.1 172.16.20.1 へのルートをトレースしています。経由するホップ数は最大 30 です 1 1 ms 1 ms \u0026lt;1 ms 172.16.10.254 2 * * * 要求がタイムアウトしました。 3 * * * 要求がタイムアウトしました。 4 * * * 要求がタイムアウトしました。 ルーターからはすべての SVI のデフォルトゲートウェイ・PC に ping が通るので PC 側に問題があると思って調べました。\n解決策 ファイアウォールのプロパティを見たところ、リモート IP アドレスがローカル サブサブネットになっていたことが原因だったことが判明しました。\nという訳で、リモート IP アドレスを任意のIPアドレスにすれば ping が通るようになります。\n","date":"2022-12-29T01:39:19+09:00","image":"https://takag.me/img/2022/12-29/cisco-891f.jpg","permalink":"https://takag.me/p/2022-12-29/","title":"ファイアウォールが原因でpingが通らなかった"},{"content":"はじめに ブログを開設しました。やる気があるときに書いていきます。\n初投稿はこのブログの技術的なことについて書き残しておこうと思います。\n技術スタック Golang Hugo Hugo Theme Stack Docker VScode Remote Containers GitHub Pages GitHub Actions Hugo について Go で記述された静的サイトジェネレーター\nマークダウン形式で記事が書けるのでとても簡単\n記事投稿の流れ 記事を生成 $ hugo new post/sample.md 記事を書く\nファイルパスは\u0026lt;site-name\u0026gt;/content/post $ hugo server GitHub に push\nGithub Action Workflow によりデプロイ完了！\nまとめ Go の勉強がてらに良さげなフレームワークを探してこれにたどり着きました。\n結局 Go の勉強にはなりませんでしたが\u0026hellip;\nそれはさておき、記事を量産できるよう頑張ります。\n参考 Categoris color different on posts and changes when opening a post ","date":"2022-12-21T19:16:28+09:00","image":"https://takag.me/img/2022/12-21/hugo-logo.jpeg","permalink":"https://takag.me/p/2022-12-21/","title":"Hello World"}]